{
  "version": 3,
  "sources": ["../../use-react-router-breadcrumbs/dist/es/index.js"],
  "sourcesContent": ["import React, { createElement } from 'react';\r\nimport { useLocation, Route, matchPath } from 'react-router-dom';\r\n\r\nvar joinPaths = function joinPaths(paths) {\r\n  return paths.join('/').replace(/\\/\\/+/g, '/');\r\n};\r\n\r\nvar paramRe = /^:\\w+$/;\r\nvar dynamicSegmentValue = 3;\r\nvar indexRouteValue = 2;\r\nvar emptySegmentValue = 1;\r\nvar staticSegmentValue = 10;\r\nvar splatPenalty = -2;\r\n\r\nvar isSplat = function isSplat(s) {\r\n  return s === '*';\r\n};\r\n\r\nfunction computeScore(path, index) {\r\n  var segments = path.split('/');\r\n  var initialScore = segments.length;\r\n\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n\r\n  return segments.filter(function (s) {\r\n    return !isSplat(s);\r\n  }).reduce(function (score, segment) {\r\n    if (paramRe.test(segment)) {\r\n      return score + dynamicSegmentValue;\r\n    }\r\n\r\n    if (segment === '') {\r\n      return score + emptySegmentValue;\r\n    }\r\n\r\n    return score + staticSegmentValue;\r\n  }, initialScore);\r\n}\r\n\r\nfunction compareIndexes(a, b) {\r\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\r\n    return n === b[i];\r\n  });\r\n  return siblings ? a[a.length - 1] - b[b.length - 1] : 0;\r\n}\r\n\r\nfunction flattenRoutes(routes) {\r\n  var branches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n  var parentsMeta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\r\n  var parentPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\r\n  routes.forEach(function (route, index) {\r\n    var _a;\r\n\r\n    if (typeof route.path !== 'string' && !route.index && !((_a = route.children) === null || _a === void 0 ? void 0 : _a.length)) {\r\n      throw new Error('useBreadcrumbs: `path` or `index` must be provided in every route object');\r\n    }\r\n\r\n    if (route.path && route.index) {\r\n      throw new Error('useBreadcrumbs: `path` and `index` cannot be provided at the same time');\r\n    }\r\n\r\n    var meta = {\r\n      relativePath: route.path || '',\r\n      childrenIndex: index,\r\n      route: route\r\n    };\r\n\r\n    if (meta.relativePath.charAt(0) === '/') {\r\n      if (!meta.relativePath.startsWith(parentPath)) {\r\n        throw new Error('useBreadcrumbs: The absolute path of the child route must start with the parent path');\r\n      }\r\n\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n\r\n    var path = joinPaths([parentPath, meta.relativePath]);\r\n    var routesMeta = parentsMeta.concat(meta);\r\n\r\n    if (route.children && route.children.length > 0) {\r\n      if (route.index) {\r\n        throw new Error('useBreadcrumbs: Index route cannot have child routes');\r\n      }\r\n\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n\r\n    branches.push({\r\n      path: path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta: routesMeta\r\n    });\r\n  });\r\n  return branches;\r\n}\r\n\r\nfunction rankRouteBranches(branches) {\r\n  return branches.sort(function (a, b) {\r\n    return a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map(function (meta) {\r\n      return meta.childrenIndex;\r\n    }), b.routesMeta.map(function (meta) {\r\n      return meta.childrenIndex;\r\n    }));\r\n  });\r\n}\r\n\r\nvar NO_BREADCRUMB = Symbol('NO_BREADCRUMB');\r\nvar humanize = function humanize(str) {\r\n  return str.replace(/^[\\s_]+|[\\s_]+$/g, '').replace(/[-_\\s]+/g, ' ').replace(/^[a-z]/, function (m) {\r\n    return m.toUpperCase();\r\n  });\r\n};\r\n\r\nvar render = function render(_ref) {\r\n  var Breadcrumb = _ref.breadcrumb,\r\n      match = _ref.match,\r\n      location = _ref.location,\r\n      props = _ref.props;\r\n  var componentProps = Object.assign({\r\n    match: match,\r\n    location: location,\r\n    key: match.pathname\r\n  }, props || {});\r\n  return Object.assign(Object.assign({}, componentProps), {\r\n    breadcrumb: typeof Breadcrumb === 'string' ? /*#__PURE__*/createElement('span', {\r\n      key: componentProps.key\r\n    }, Breadcrumb) : /*#__PURE__*/React.createElement(Breadcrumb, Object.assign({}, componentProps))\r\n  });\r\n};\r\n\r\nvar getDefaultBreadcrumb = function getDefaultBreadcrumb(_ref2) {\r\n  var currentSection = _ref2.currentSection,\r\n      location = _ref2.location,\r\n      pathSection = _ref2.pathSection,\r\n      defaultFormatter = _ref2.defaultFormatter;\r\n  var match = matchPath({\r\n    end: true,\r\n    path: pathSection\r\n  }, pathSection);\r\n  return render({\r\n    breadcrumb: defaultFormatter ? defaultFormatter(currentSection) : humanize(currentSection),\r\n    match: match,\r\n    location: location\r\n  });\r\n};\r\n\r\nvar getBreadcrumbMatch = function getBreadcrumbMatch(_ref3) {\r\n  var currentSection = _ref3.currentSection,\r\n      disableDefaults = _ref3.disableDefaults,\r\n      excludePaths = _ref3.excludePaths,\r\n      defaultFormatter = _ref3.defaultFormatter,\r\n      location = _ref3.location,\r\n      pathSection = _ref3.pathSection,\r\n      branches = _ref3.branches;\r\n  var breadcrumb;\r\n\r\n  var getIsPathExcluded = function getIsPathExcluded(path) {\r\n    return matchPath({\r\n      path: path,\r\n      end: true\r\n    }, pathSection) != null;\r\n  };\r\n\r\n  if (excludePaths && excludePaths.some(getIsPathExcluded)) {\r\n    return NO_BREADCRUMB;\r\n  }\r\n\r\n  branches.some(function (_ref4) {\r\n    var path = _ref4.path,\r\n        routesMeta = _ref4.routesMeta;\r\n    var route = routesMeta[routesMeta.length - 1].route;\r\n    var userProvidedBreadcrumb = route.breadcrumb;\r\n\r\n    if (!userProvidedBreadcrumb && route.index) {\r\n      var parentMeta = routesMeta[routesMeta.length - 2];\r\n\r\n      if (parentMeta && parentMeta.route.breadcrumb) {\r\n        userProvidedBreadcrumb = parentMeta.route.breadcrumb;\r\n      }\r\n    }\r\n\r\n    var caseSensitive = route.caseSensitive,\r\n        props = route.props;\r\n    var match = matchPath({\r\n      path: path,\r\n      end: true,\r\n      caseSensitive: caseSensitive\r\n    }, pathSection);\r\n\r\n    if (match && userProvidedBreadcrumb === null) {\r\n      breadcrumb = NO_BREADCRUMB;\r\n      return true;\r\n    }\r\n\r\n    if (match) {\r\n      if (!userProvidedBreadcrumb && disableDefaults) {\r\n        breadcrumb = NO_BREADCRUMB;\r\n        return true;\r\n      }\r\n\r\n      breadcrumb = render({\r\n        breadcrumb: userProvidedBreadcrumb || (defaultFormatter ? defaultFormatter(currentSection) : humanize(currentSection)),\r\n        match: Object.assign(Object.assign({}, match), {\r\n          route: route\r\n        }),\r\n        location: location,\r\n        props: props\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  if (breadcrumb) {\r\n    return breadcrumb;\r\n  }\r\n\r\n  if (disableDefaults) {\r\n    return NO_BREADCRUMB;\r\n  }\r\n\r\n  return getDefaultBreadcrumb({\r\n    pathSection: pathSection,\r\n    currentSection: pathSection === '/' ? 'Home' : currentSection,\r\n    location: location,\r\n    defaultFormatter: defaultFormatter\r\n  });\r\n};\r\n\r\nvar getBreadcrumbs = function getBreadcrumbs(_ref5) {\r\n  var routes = _ref5.routes,\r\n      location = _ref5.location,\r\n      _ref5$options = _ref5.options,\r\n      options = _ref5$options === void 0 ? {} : _ref5$options;\r\n  var pathname = location.pathname;\r\n  var branches = rankRouteBranches(flattenRoutes(routes));\r\n  var breadcrumbs = [];\r\n  pathname.split('?')[0].split('/').reduce(function (previousSection, currentSection, index) {\r\n    var pathSection = !currentSection ? '/' : \"\".concat(previousSection, \"/\").concat(currentSection);\r\n\r\n    if (pathSection === '/' && index !== 0) {\r\n      return '';\r\n    }\r\n\r\n    var breadcrumb = getBreadcrumbMatch(Object.assign({\r\n      currentSection: currentSection,\r\n      location: location,\r\n      pathSection: pathSection,\r\n      branches: branches\r\n    }, options));\r\n\r\n    if (breadcrumb !== NO_BREADCRUMB) {\r\n      breadcrumbs.push(breadcrumb);\r\n    }\r\n\r\n    return pathSection === '/' ? '' : pathSection;\r\n  }, '');\r\n  return breadcrumbs;\r\n};\r\n\r\nvar useReactRouterBreadcrumbs = function useReactRouterBreadcrumbs(routes, options) {\r\n  return getBreadcrumbs({\r\n    routes: routes || [],\r\n    location: useLocation(),\r\n    options: options\r\n  });\r\n};\r\n\r\nfunction invariant(cond, message) {\r\n  if (!cond) throw new Error(message);\r\n}\r\n\r\nfunction createRoutesFromChildren(children) {\r\n  var routes = [];\r\n  React.Children.forEach(children, function (element) {\r\n    if (! /*#__PURE__*/React.isValidElement(element)) {\r\n      return;\r\n    }\r\n\r\n    if (element.type === React.Fragment) {\r\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\r\n      return;\r\n    }\r\n\r\n    invariant(element.type === Route, \"[\".concat(typeof element.type === 'string' ? element.type : element.type.name, \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\"));\r\n    var route = {\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      breadcrumb: element.props.breadcrumb\r\n    };\r\n\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(element.props.children);\r\n    }\r\n\r\n    routes.push(route);\r\n  });\r\n  return routes;\r\n}\r\nvar BreadCrumbRoute = Route;\r\n\r\nexport { BreadCrumbRoute as Route, createRoutesFromChildren, useReactRouterBreadcrumbs as default, getBreadcrumbs, humanize };\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA,mBAAqC;AAGrC,IAAI,YAAY,SAASA,WAAU,OAAO;AACxC,SAAO,MAAM,KAAK,GAAG,EAAE,QAAQ,UAAU,GAAG;AAC9C;AAEA,IAAI,UAAU;AACd,IAAI,sBAAsB;AAC1B,IAAI,kBAAkB;AACtB,IAAI,oBAAoB;AACxB,IAAI,qBAAqB;AACzB,IAAI,eAAe;AAEnB,IAAI,UAAU,SAASC,SAAQ,GAAG;AAChC,SAAO,MAAM;AACf;AAEA,SAAS,aAAa,MAAM,OAAO;AACjC,MAAI,WAAW,KAAK,MAAM,GAAG;AAC7B,MAAI,eAAe,SAAS;AAE5B,MAAI,SAAS,KAAK,OAAO,GAAG;AAC1B,oBAAgB;AAAA,EAClB;AAEA,MAAI,OAAO;AACT,oBAAgB;AAAA,EAClB;AAEA,SAAO,SAAS,OAAO,SAAU,GAAG;AAClC,WAAO,CAAC,QAAQ,CAAC;AAAA,EACnB,CAAC,EAAE,OAAO,SAAU,OAAO,SAAS;AAClC,QAAI,QAAQ,KAAK,OAAO,GAAG;AACzB,aAAO,QAAQ;AAAA,IACjB;AAEA,QAAI,YAAY,IAAI;AAClB,aAAO,QAAQ;AAAA,IACjB;AAEA,WAAO,QAAQ;AAAA,EACjB,GAAG,YAAY;AACjB;AAEA,SAAS,eAAe,GAAG,GAAG;AAC5B,MAAI,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,SAAU,GAAG,GAAG;AAC3E,WAAO,MAAM,EAAE,CAAC;AAAA,EAClB,CAAC;AACD,SAAO,WAAW,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,IAAI;AACxD;AAEA,SAAS,cAAc,QAAQ;AAC7B,MAAI,WAAW,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACpF,MAAI,cAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACvF,MAAI,aAAa,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACrF,SAAO,QAAQ,SAAU,OAAO,OAAO;AACrC,QAAI;AAEJ,QAAI,OAAO,MAAM,SAAS,YAAY,CAAC,MAAM,SAAS,GAAG,KAAK,MAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,SAAS;AAC7H,YAAM,IAAI,MAAM,0EAA0E;AAAA,IAC5F;AAEA,QAAI,MAAM,QAAQ,MAAM,OAAO;AAC7B,YAAM,IAAI,MAAM,wEAAwE;AAAA,IAC1F;AAEA,QAAI,OAAO;AAAA,MACT,cAAc,MAAM,QAAQ;AAAA,MAC5B,eAAe;AAAA,MACf;AAAA,IACF;AAEA,QAAI,KAAK,aAAa,OAAO,CAAC,MAAM,KAAK;AACvC,UAAI,CAAC,KAAK,aAAa,WAAW,UAAU,GAAG;AAC7C,cAAM,IAAI,MAAM,sFAAsF;AAAA,MACxG;AAEA,WAAK,eAAe,KAAK,aAAa,MAAM,WAAW,MAAM;AAAA,IAC/D;AAEA,QAAI,OAAO,UAAU,CAAC,YAAY,KAAK,YAAY,CAAC;AACpD,QAAI,aAAa,YAAY,OAAO,IAAI;AAExC,QAAI,MAAM,YAAY,MAAM,SAAS,SAAS,GAAG;AAC/C,UAAI,MAAM,OAAO;AACf,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACxE;AAEA,oBAAc,MAAM,UAAU,UAAU,YAAY,IAAI;AAAA,IAC1D;AAEA,aAAS,KAAK;AAAA,MACZ;AAAA,MACA,OAAO,aAAa,MAAM,MAAM,KAAK;AAAA,MACrC;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACD,SAAO;AACT;AAEA,SAAS,kBAAkB,UAAU;AACnC,SAAO,SAAS,KAAK,SAAU,GAAG,GAAG;AACnC,WAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,eAAe,EAAE,WAAW,IAAI,SAAU,MAAM;AAC/F,aAAO,KAAK;AAAA,IACd,CAAC,GAAG,EAAE,WAAW,IAAI,SAAU,MAAM;AACnC,aAAO,KAAK;AAAA,IACd,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AAEA,IAAI,gBAAgB,OAAO,eAAe;AAC1C,IAAI,WAAW,SAASC,UAAS,KAAK;AACpC,SAAO,IAAI,QAAQ,oBAAoB,EAAE,EAAE,QAAQ,YAAY,GAAG,EAAE,QAAQ,UAAU,SAAU,GAAG;AACjG,WAAO,EAAE,YAAY;AAAA,EACvB,CAAC;AACH;AAEA,IAAI,SAAS,SAASC,QAAO,MAAM;AACjC,MAAI,aAAa,KAAK,YAClB,QAAQ,KAAK,OACb,WAAW,KAAK,UAChB,QAAQ,KAAK;AACjB,MAAI,iBAAiB,OAAO,OAAO;AAAA,IACjC;AAAA,IACA;AAAA,IACA,KAAK,MAAM;AAAA,EACb,GAAG,SAAS,CAAC,CAAC;AACd,SAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,cAAc,GAAG;AAAA,IACtD,YAAY,OAAO,eAAe,eAAwB,4BAAc,QAAQ;AAAA,MAC9E,KAAK,eAAe;AAAA,IACtB,GAAG,UAAU,IAAiB,aAAAC,QAAM,cAAc,YAAY,OAAO,OAAO,CAAC,GAAG,cAAc,CAAC;AAAA,EACjG,CAAC;AACH;AAEA,IAAI,uBAAuB,SAASC,sBAAqB,OAAO;AAC9D,MAAI,iBAAiB,MAAM,gBACvB,WAAW,MAAM,UACjB,cAAc,MAAM,aACpB,mBAAmB,MAAM;AAC7B,MAAI,QAAQ,UAAU;AAAA,IACpB,KAAK;AAAA,IACL,MAAM;AAAA,EACR,GAAG,WAAW;AACd,SAAO,OAAO;AAAA,IACZ,YAAY,mBAAmB,iBAAiB,cAAc,IAAI,SAAS,cAAc;AAAA,IACzF;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAEA,IAAI,qBAAqB,SAASC,oBAAmB,OAAO;AAC1D,MAAI,iBAAiB,MAAM,gBACvB,kBAAkB,MAAM,iBACxB,eAAe,MAAM,cACrB,mBAAmB,MAAM,kBACzB,WAAW,MAAM,UACjB,cAAc,MAAM,aACpB,WAAW,MAAM;AACrB,MAAI;AAEJ,MAAI,oBAAoB,SAASC,mBAAkB,MAAM;AACvD,WAAO,UAAU;AAAA,MACf;AAAA,MACA,KAAK;AAAA,IACP,GAAG,WAAW,KAAK;AAAA,EACrB;AAEA,MAAI,gBAAgB,aAAa,KAAK,iBAAiB,GAAG;AACxD,WAAO;AAAA,EACT;AAEA,WAAS,KAAK,SAAU,OAAO;AAC7B,QAAI,OAAO,MAAM,MACb,aAAa,MAAM;AACvB,QAAI,QAAQ,WAAW,WAAW,SAAS,CAAC,EAAE;AAC9C,QAAI,yBAAyB,MAAM;AAEnC,QAAI,CAAC,0BAA0B,MAAM,OAAO;AAC1C,UAAI,aAAa,WAAW,WAAW,SAAS,CAAC;AAEjD,UAAI,cAAc,WAAW,MAAM,YAAY;AAC7C,iCAAyB,WAAW,MAAM;AAAA,MAC5C;AAAA,IACF;AAEA,QAAI,gBAAgB,MAAM,eACtB,QAAQ,MAAM;AAClB,QAAI,QAAQ,UAAU;AAAA,MACpB;AAAA,MACA,KAAK;AAAA,MACL;AAAA,IACF,GAAG,WAAW;AAEd,QAAI,SAAS,2BAA2B,MAAM;AAC5C,mBAAa;AACb,aAAO;AAAA,IACT;AAEA,QAAI,OAAO;AACT,UAAI,CAAC,0BAA0B,iBAAiB;AAC9C,qBAAa;AACb,eAAO;AAAA,MACT;AAEA,mBAAa,OAAO;AAAA,QAClB,YAAY,2BAA2B,mBAAmB,iBAAiB,cAAc,IAAI,SAAS,cAAc;AAAA,QACpH,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,GAAG;AAAA,UAC7C;AAAA,QACF,CAAC;AAAA,QACD;AAAA,QACA;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,CAAC;AAED,MAAI,YAAY;AACd,WAAO;AAAA,EACT;AAEA,MAAI,iBAAiB;AACnB,WAAO;AAAA,EACT;AAEA,SAAO,qBAAqB;AAAA,IAC1B;AAAA,IACA,gBAAgB,gBAAgB,MAAM,SAAS;AAAA,IAC/C;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAEA,IAAI,iBAAiB,SAASC,gBAAe,OAAO;AAClD,MAAI,SAAS,MAAM,QACf,WAAW,MAAM,UACjB,gBAAgB,MAAM,SACtB,UAAU,kBAAkB,SAAS,CAAC,IAAI;AAC9C,MAAI,WAAW,SAAS;AACxB,MAAI,WAAW,kBAAkB,cAAc,MAAM,CAAC;AACtD,MAAI,cAAc,CAAC;AACnB,WAAS,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,OAAO,SAAU,iBAAiB,gBAAgB,OAAO;AACzF,QAAI,cAAc,CAAC,iBAAiB,MAAM,GAAG,OAAO,iBAAiB,GAAG,EAAE,OAAO,cAAc;AAE/F,QAAI,gBAAgB,OAAO,UAAU,GAAG;AACtC,aAAO;AAAA,IACT;AAEA,QAAI,aAAa,mBAAmB,OAAO,OAAO;AAAA,MAChD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG,OAAO,CAAC;AAEX,QAAI,eAAe,eAAe;AAChC,kBAAY,KAAK,UAAU;AAAA,IAC7B;AAEA,WAAO,gBAAgB,MAAM,KAAK;AAAA,EACpC,GAAG,EAAE;AACL,SAAO;AACT;AAEA,IAAI,4BAA4B,SAASC,2BAA0B,QAAQ,SAAS;AAClF,SAAO,eAAe;AAAA,IACpB,QAAQ,UAAU,CAAC;AAAA,IACnB,UAAU,YAAY;AAAA,IACtB;AAAA,EACF,CAAC;AACH;AAEA,SAAS,UAAU,MAAM,SAAS;AAChC,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,OAAO;AACpC;AAEA,SAAS,yBAAyB,UAAU;AAC1C,MAAI,SAAS,CAAC;AACd,eAAAL,QAAM,SAAS,QAAQ,UAAU,SAAU,SAAS;AAClD,QAAI,CAAe,aAAAA,QAAM,eAAe,OAAO,GAAG;AAChD;AAAA,IACF;AAEA,QAAI,QAAQ,SAAS,aAAAA,QAAM,UAAU;AACnC,aAAO,KAAK,MAAM,QAAQ,yBAAyB,QAAQ,MAAM,QAAQ,CAAC;AAC1E;AAAA,IACF;AAEA,cAAU,QAAQ,SAAS,OAAO,IAAI,OAAO,OAAO,QAAQ,SAAS,WAAW,QAAQ,OAAO,QAAQ,KAAK,MAAM,wGAAwG,CAAC;AAC3N,QAAI,QAAQ;AAAA,MACV,eAAe,QAAQ,MAAM;AAAA,MAC7B,SAAS,QAAQ,MAAM;AAAA,MACvB,OAAO,QAAQ,MAAM;AAAA,MACrB,MAAM,QAAQ,MAAM;AAAA,MACpB,YAAY,QAAQ,MAAM;AAAA,IAC5B;AAEA,QAAI,QAAQ,MAAM,UAAU;AAC1B,YAAM,WAAW,yBAAyB,QAAQ,MAAM,QAAQ;AAAA,IAClE;AAEA,WAAO,KAAK,KAAK;AAAA,EACnB,CAAC;AACD,SAAO;AACT;AACA,IAAI,kBAAkB;",
  "names": ["joinPaths", "isSplat", "humanize", "render", "React", "getDefaultBreadcrumb", "getBreadcrumbMatch", "getIsPathExcluded", "getBreadcrumbs", "useReactRouterBreadcrumbs"]
}
